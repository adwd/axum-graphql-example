"""
City
"""
type City {
  name: String!
  id: ID!
}

type CityConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [CityEdge!]!
  """
  A list of nodes.
  """
  nodes: [City!]!
}

"""
An edge in a connection.
"""
type CityEdge {
  """
  A cursor for use in pagination
  """
  cursor: String!
  """
  The item at the end of the edge
  """
  node: City!
}

type Country {
  """
  Code of Country
  """
  code: String!
  """
  Name of Country
  """
  name: String!
  """
  Cities in the country
  """
  cities: [City!]!
  """
  Emoji of country flag
  """
  flag: String
}

"""
Information about pagination in a connection
"""
type PageInfo {
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  """
  Returns the sum of a and b
  """
  add(a: Int!, b: Int!): Int!
  """
  Fetch countries
  """
  countries(search: String, limit: Int! = 20): [Country!]!
  cities(after: String, before: String, first: Int, last: Int): CityConnection!
}

schema {
  query: Query
}
